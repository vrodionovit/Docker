name: Build OnvifDeviceManager

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: onvif-device-manager:latest
        outputs: type=docker,dest=/tmp/onvif-device-manager.tar

    - name: Load Docker image
      run: docker load --input /tmp/onvif-device-manager.tar

    - name: Copy binary from Docker container
      run: |
        container_id=$(docker create onvif-device-manager:latest)
        docker cp $container_id:/OnvifDeviceManager/onvifmgr ./onvifmgr
        docker rm $container_id

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: onvifmgr
        path: ./onvifmgr

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./onvifmgr
        asset_name: onvifmgr
        asset_content_type: application/octet-stream
